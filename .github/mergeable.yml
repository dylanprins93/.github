version: 2
mergeable:

#########################
### Naming convention ###
#########################
- when: pull_request.*, pull_request_review.*
  name: 'Naming convention'
  filter:
    - do: repository
      visibility: 'private'
      name:
        must_exclude:
          regex: '^(InSpark\.|Solution\.|BRC\.|DNA\.|DEV\.|SEC\.|.github$)'
  validate:
    - do: age
      created_at:
        days: 0
  pass:
    - do: checks
      status: 'failure'
      payload:
        title: 'Naming convention'
        summary: 'The repo is not following the naming convention'

##############
### Global ###
##############

- when: pull_request.*, pull_request_review.*
  name: 'Default rules'
  validate:
    - do: baseRef
      must_exclude:
        regex: 'master'
        message: 'Merging into repo:master is forbidden'
    - do: description
      no_empty:
        enabled: true

- when: pull_request.*, pull_request_review.*
  name: 'Check stale PR'
  validate:
    - when: schedule.repository
      validate:
        - do: stale
          days: 30
          type: pull_request
      pass:
        - do: comment
          payload:
            body: This is old. Is it still relevant?

- when: pull_request.*, pull_request_review.*
  filter:
    - do: repository
      visibility: 'private'
  validate:
    - do: age
      created_at:
        days: 0
  pass:
    - do: assign
      assignees: ['@author']

- when: pull_request.*, pull_request_review.*
  filter:
    - do: repository
      visibility: 'public'
  validate:
    - do: contents
      files:
        pr_diff: false
        ignore: ['.github/mergeable.yml'] # Optional, default ['.github/mergeable.yml'], pattern of files to ignore
      must_include:
        regex: 'LICENSE'

#################
### SOLUTIONS ###
#################

- when: pull_request.*, pull_request_review.*
  name: 'Check labels'
  filter:
    - do: repository
      visibility: 'private' # Can be public or private
      name:
        must_include:
          regex: 'Solution.'
  validate:
    - do: label
      must_include:
        regex: 'patch|minor|major|no-release'
        regex_flag: 'none'
        message: 'Must have a version increment label or no-release'

- when: pull_request.*, pull_request_review.*
  name: 'Check approvals'
  filter:
    - do: repository
      visibility: 'private'
      name:
        must_include:
          regex: 'Solution.'
  validate:
    - do: approvals
      min:
        count: 2
      required:
        owners: true
        assignees: false
        requested_reviewers: false
      block:
        changes_requested: true
      limit:
        owners: true